{"version":3,"sources":["assets/svgs/login.svg","redux/auth/authActionTypes.js","redux/auth/authActionCreators.js","components/common/Alert.js","helpers/checkAuth.js","api/apiUtils.js","redux/user/userActionTypes.js","redux/user/userActionCreators.js","components/auth/Login.js","assets/svgs/register.svg","components/auth/Register.js","components/containers/PrivateRoute.js","components/error/404.js","redux/cart/cartActionTypes.js","redux/cart/cartActionCreators.js","components/SingleFood.js","components/FoodGrid.js","redux/food/foodActionTypes.js","components/common/Spinner.js","components/Home.js","redux/food/foodActionCreators.js","redux/order/orderActionTypes.js","helpers/formatDate.js","components/Profile.js","redux/order/orderActionCreators.js","components/SingleOrder.js","routes.js","components/CartItem.js","components/OrderSuccess.js","components/CouponInput.js","components/CartDrawer.js","assets/svgs/logo.svg","components/Footer.js","App.js","reportWebVitals.js","redux/auth/authReducers.js","redux/food/foodReducers.js","redux/cart/cartReducers.js","redux/user/userReducers.js","redux/order/orderReducers.js","redux/monsterReducer.js","index.js"],"names":["AUTH_START","AUTH_SUCCESS","AUTH_FAILURE","AUTH_RESET","AUTH_LOGOUT","authCommon","urlType","userData","dispatch","type","types","axios","post","res","payload","data","food_order_access_token","localStorage","setItem","error_msg","response","message","AlertReusable","status","title","description","useState","show","setShow","mr","onClick","position","right","top","checkAuth","token","getItem","decode","exp","Date","getTime","e","interceptors","request","use","config","headers","Authorization","error","Promise","reject","GET_USER","USER_FAILURE","USER_START","getUserAction","get","user","Login","history","useDispatch","auth","useSelector","state","console","log","loading","useEffect","push","flex","boxSize","src","LoginImage","alt","alignSelf","as","size","marginBottom","Alert","errResponse","initialValues","email","password","onSubmit","values","actions","setSubmitting","validationSchema","Yup","required","min","props","spacing","name","field","form","isInvalid","errors","touched","pointerEvents","children","color","marginTop","id","placeholder","width","base","md","xl","mt","colorScheme","isLoading","href","Register","RegisterSvg","firstName","lastName","confirmPassword","username","address","max","oneOf","justifyContent","flexDirection","lg","style","marginRight","PrivateRoute","Component","component","rest","render","to","MissingPage","class","className","ADD_TO_CART","REMOVE_FROM_CART","RESTORE_CART","UPDATE_CART_COUPON","COUPON_ERROR","CLEAR_CART","CLEAR_ERROR_AND_MESSAGE","addToCart","foodDetails","qty","food","Number","removeFromCart","SingleFood","cart","toast","useToast","image","price","_id","addFoodToCart","duration","isClosable","maxW","borderWidth","borderRadius","overflow","p","fontWeight","lineHeight","d","alignItems","foods","length","find","obj","variant","leftIcon","FoodGrid","minChildWidth","map","idx","FOOD_START","FOOD_SUCCESS","FOOD_FAILURE","FOOD_RESET","SpinnerReusable","Home","foodStateLoading","Spinner","mb","PAY_FOR_ORDER","ORDER_FAILED","ORDER_RESPONSE_CLEAR","GET_ORDERS","GET_SINGLE_ORDER","ORDER_START","formatDate","dateString","toLocaleDateString","undefined","year","month","day","Profile","order","orders","textAlign","reference","createdAt","totalAmount","SingleOrder","match","singleOrder","params","store","getState","filter","handleReorder","preventDefault","JSON","stringify","BaseRouter","exact","path","CartItem","selectArr","Array","from","_","i","objectFit","fontSize","value","onChange","target","handleSelectChange","num","icon","OrderSuccess","orderId","handleClose","isOpen","onClose","CouponInput","coupon","setCoupon","setError","handleCouponApply","percent_off","setTimeout","updateCoupon","align","errorBorderColor","CheckoutButton","initializePayment","disabled","onSuccess","CartDrawer","orderResponse","userEmail","amount","publicKey","process","REACT_APP_PAYSTACK_PUBLIC_KEY","createOrderAction","usePaystackPayment","priceBeforeCoupon","discount","Footer","bg","w","isExternal","mx","CartIcon","useDisclosure","onOpen","AiOutlineShoppingCart","m","cursor","zIndex","count","App","parse","LogoSvg","display","CgProfile","h","removeItem","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialSignupState","initialFoodState","initialCartState","addToExistingObjInCart","newCartState","existingFood","calculateTotal","countItemsInCart","updatedCart","removeItemFromCart","total","reduce","sum","toFixed","initialUserState","initialOrderState","monsterReducer","combineReducers","action","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d146063.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/login.8cc1ab77.svg\";","export const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAILURE = \"AUTH_FAILURE\";\nexport const AUTH_RESET = \"AUTH_RESET\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n","import axios from \"axios\";\nimport * as types from \"./authActionTypes\";\n\nexport const authCommon = (urlType, userData) => {\n  return async function (dispatch) {\n    dispatch({ type: types.AUTH_START });\n    try {\n      const res = await axios.post(`api/auth/${urlType}`, userData);\n\n      dispatch({\n        type: types.AUTH_SUCCESS,\n        payload: res.data.food_order_access_token,\n      });\n      localStorage.setItem(\n        \"food_order_access_token\",\n        res.data.food_order_access_token\n      );\n    } catch (error) {\n      const error_msg =\n        error.response && error.response.data.error_msg\n          ? error.response.data.error_msg\n          : error.message;\n      dispatch({ type: types.AUTH_FAILURE, payload: error_msg });\n    }\n  };\n};\nexport const authLogin = (userData) => {\n  return authCommon(\"login\", userData);\n};\n\nexport const authRegister = (userData) => {\n  return authCommon(\"register\", userData);\n};\n\nexport const authLogout = () => {\n  return async function (dispatch) {\n    dispatch({ type: types.AUTH_LOGOUT });\n    localStorage.removeItem(\"food_order_access_token\");\n  };\n};\n","import React, { useState } from \"react\";\nimport {\n  AlertDescription,\n  AlertTitle,\n  CloseButton,\n  Alert,\n  AlertIcon,\n} from \"@chakra-ui/react\";\n\nconst AlertReusable = ({ status, title, description }) => {\n  const [show, setShow] = useState(true);\n\n  return (\n    <>\n      {show ? (\n        <Alert status={status}>\n          <AlertIcon />\n          <AlertTitle mr={2}>{title}</AlertTitle>\n          <AlertDescription>{description}</AlertDescription>\n          <CloseButton\n            onClick={() => setShow(false)}\n            position=\"absolute\"\n            right=\"8px\"\n            top=\"8px\"\n          />\n        </Alert>\n      ) : null}\n    </>\n  );\n};\n\nexport default AlertReusable;\n","import decode from \"jwt-decode\";\n\nconst checkAuth = () => {\n  const token = localStorage.getItem(\"food_order_access_token\");\n\n  if (!token) return false;\n\n  try {\n    const { exp } = decode(token);\n    if (exp < new Date().getTime() / 1000) {\n      return false;\n    }\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\nexport default checkAuth;\n","import axios from \"axios\";\n\naxios.interceptors.request.use(\n  (config) => {\n    /** In dev, intercepts request and logs it into console for dev */\n    const token = localStorage.getItem(\"food_order_access_token\");\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default axios;\n","export const GET_USER = \"GET_USER\";\nexport const USER_FAILURE = \"USER_FAILURE\";\nexport const USER_START = \"USER_START\";\n","import axios from \"../../api/apiUtils\";\nimport * as types from \"./userActionTypes\";\n\nexport const getUserAction = () => {\n  return async function (dispatch) {\n    dispatch({ type: types.USER_START });\n    try {\n      const res = await axios.get(`/api/users/`);\n\n      dispatch({\n        type: types.GET_USER,\n        payload: res.data.user,\n      });\n    } catch (error) {\n      const error_msg =\n        error.response && error.response.data.error_msg\n          ? error.response.data.error_msg\n          : error.message;\n      dispatch({ type: types.USER_FAILURE, payload: error_msg });\n    }\n  };\n};\n","import {\n  Box,\n  Image,\n  Center,\n  Flex,\n  Text,\n  FormErrorMessage,\n  FormControl,\n  Button,\n  Input,\n  Heading,\n  InputGroup,\n  InputLeftElement,\n  Stack,\n  Link,\n} from \"@chakra-ui/react\";\nimport { EmailIcon, LockIcon } from \"@chakra-ui/icons\";\nimport React, { useEffect } from \"react\";\nimport LoginImage from \"../../assets/svgs/login.svg\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authLogin } from \"../../redux/auth/authActionCreators\";\nimport AlertReusable from \"../common/Alert\";\nimport checkAuth from \"../../helpers/checkAuth\";\nimport { getUserAction } from \"../../redux/user/userActionCreators\";\n\nconst Login = ({ history }) => {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n  console.log(auth.loading)\n\n  useEffect(() => {\n    if (checkAuth()) {\n      history.push(\"/\");\n    }\n  }, [history]);\n\n  useEffect(() => {\n    if (auth.token) {\n      dispatch(getUserAction());\n      history.push(\"/\");\n    }\n  }, [auth.token, history, dispatch]);\n\n  return (\n    <>\n      <Flex>\n        <Center flex={[\"0\", \"0.6\", \"0.6\"]}>\n          <Image boxSize=\"500px\" src={LoginImage} alt=\"Login\" />\n        </Center>\n\n        <Box flex={[\"1\", \"0.4\", \"0.4\"]} alignSelf=\"center\">\n          <Heading as=\"h3\" size=\"lg\" marginBottom=\"10px\">\n            Welcome Back!\n          </Heading>\n          <Text marginBottom=\"16px\">\n            Fill in your login credentials to pick up where you left off\n          </Text>\n\n          {auth.error ? (\n            <AlertReusable status=\"error\" title={auth.errResponse} />\n          ) : null}\n\n          <Formik\n            initialValues={{ email: \"\", password: \"\" }}\n            onSubmit={(values, actions) => {\n              actions.setSubmitting(auth.loading);\n              dispatch(authLogin(values));\n            }}\n            validationSchema={Yup.object({\n              email: Yup.string()\n                .email(\"Invalid email address\")\n                .required(\"Enter your email address\"),\n              password: Yup.string().min(6).required(\"Enter your password\"),\n            })}\n          >\n            {(props) => (\n              <Form>\n                <Stack spacing={4}>\n                  <Field name=\"email\">\n                    {({ field, form }) => (\n                      <FormControl\n                        isInvalid={form.errors.email && form.touched.email}\n                      >\n                        <InputGroup>\n                          <InputLeftElement\n                            pointerEvents=\"none\"\n                            children={<EmailIcon color=\"gray.700\" />}\n                            marginTop=\"5px\"\n                          />\n                          <Input\n                            {...field}\n                            id=\"email\"\n                            placeholder=\"Email\"\n                            size=\"lg\"\n                            width={{\n                              base: \"auto\", // 0-48em\n                              md: \"auto\", // 48em-80em,\n                              xl: \"400px\", // 80em+\n                            }}\n                          />\n                        </InputGroup>\n                        <FormErrorMessage>{form.errors.email}</FormErrorMessage>\n                      </FormControl>\n                    )}\n                  </Field>\n\n                  <Field name=\"password\">\n                    {({ field, form }) => (\n                      <FormControl\n                        isInvalid={\n                          form.errors.password && form.touched.password\n                        }\n                      >\n                        <InputGroup>\n                          <InputLeftElement\n                            pointerEvents=\"none\"\n                            children={<LockIcon color=\"gray.700\" />}\n                            marginTop=\"5px\"\n                          />\n                          <Input\n                            type=\"password\"\n                            {...field}\n                            id=\"password\"\n                            placeholder=\"Password\"\n                            size=\"lg\"\n                            width={{\n                              base: \"auto\", // 0-48em\n                              md: \"auto\", // 48em-80em,\n                              xl: \"400px\", // 80em+\n                            }}\n                          />\n                        </InputGroup>\n                        <FormErrorMessage>\n                          {form.errors.password}\n                        </FormErrorMessage>\n                      </FormControl>\n                    )}\n                  </Field>\n                </Stack>\n\n                <Button\n                  mt={4}\n                  colorScheme=\"blue\"\n                  isLoading={auth.loading}\n                  type=\"submit\"\n                >\n                  Login\n                </Button>\n                <Text marginTop=\"20px\">\n                  Don't have an account?{\" \"}\n                  <Link color=\"blue.500\" href=\"/register\">\n                    Sign Up\n                  </Link>\n                </Text>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Flex>\n    </>\n  );\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/register.fed4c349.svg\";","import {\n  Box,\n  Image,\n  Center,\n  Flex,\n  Text,\n  FormErrorMessage,\n  FormControl,\n  Button,\n  Input,\n  Heading,\n  InputGroup,\n  InputLeftElement,\n  Stack,\n  Link,\n} from \"@chakra-ui/react\";\nimport { EmailIcon, LockIcon } from \"@chakra-ui/icons\";\nimport React, { useEffect } from \"react\";\nimport RegisterSvg from \"../../assets/svgs/register.svg\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authRegister } from \"../../redux/auth/authActionCreators\";\nimport { getUserAction } from \"../../redux/user/userActionCreators\";\n\nimport AlertReusable from \"../common/Alert\";\nimport checkAuth from \"../../helpers/checkAuth\";\nimport { FaAddressCard, FaUserCircle } from \"react-icons/fa\";\n\nconst Register = ({ history }) => {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (checkAuth()) {\n      history.push(\"/\");\n    }\n  }, [history]);\n\n  useEffect(() => {\n    if (auth.token) {\n      dispatch(getUserAction());\n      history.push(\"/\");\n    }\n  }, [auth.token, history, dispatch]);\n\n  return (\n    <>\n      <Flex>\n        <Center flex={[\"0\", \"0.6\", \"0.6\"]}>\n          <Image boxSize=\"500px\" src={RegisterSvg} alt=\"Welcome to Taste!\" />\n        </Center>\n\n        <Box flex={[\"1\", \"0.4\", \"0.4\"]} alignSelf=\"center\">\n          <Heading as=\"h3\" size=\"lg\" marginBottom=\"10px\">\n            New to Taste!?\n          </Heading>\n          <Text marginBottom=\"16px\">\n            Fill in your details to experience food delivery in a different way\n          </Text>\n\n          {auth.error ? (\n            <AlertReusable status=\"error\" title={auth.errResponse} />\n          ) : null}\n\n          <Formik\n            initialValues={{\n              email: \"\",\n              password: \"\",\n              firstName: \"\",\n              lastName: \"\",\n              confirmPassword: \"\",\n              username: \"\",\n              address: \"\",\n            }}\n            onSubmit={(values, actions) => {\n              delete values.confirmPassword;\n              dispatch(authRegister(values));\n              actions.setSubmitting(auth.loading);\n            }}\n            validationSchema={Yup.object({\n              email: Yup.string()\n                .email(\"Invalid email address\")\n                .required(\"Enter your email address\"),\n              firstName: Yup.string()\n                .min(3)\n                .max(50)\n                .required(\"Enter your First Name\"),\n              lastName: Yup.string()\n                .min(3)\n                .max(50)\n                .required(\"Enter your Last Name\"),\n\n              username: Yup.string()\n                .min(3)\n                .max(50)\n                .required(\"Enter your username\"),\n              password: Yup.string().min(6).required(\"Enter your password\"),\n              confirmPassword: Yup.string().oneOf(\n                [Yup.ref(\"password\"), null],\n                \"Passwords must match\"\n              ),\n            })}\n          >\n            {(props) => (\n              <Form>\n                <Stack spacing={4}>\n                  <Flex\n                    justifyContent=\"space-between\"\n                    flexDirection={{\n                      base: \"column\",\n                      md: \"row\",\n                      lg: \"row\",\n                    }}\n                  >\n                    <Field name=\"firstName\">\n                      {({ field, form }) => (\n                        <FormControl\n                          isInvalid={\n                            form.errors.firstName && form.touched.firstName\n                          }\n                          style={{ marginRight: \"10px\", marginBottom: \"10px\" }}\n                        >\n                          <InputGroup>\n                            <InputLeftElement\n                              pointerEvents=\"none\"\n                              children={<FaUserCircle />}\n                              marginTop=\"5px\"\n                            />\n                            <Input\n                              {...field}\n                              id=\"firstName\"\n                              placeholder=\"First Name\"\n                              size=\"lg\"\n                              width={{\n                                base: \"100%\", // 0-48em\n                                md: \"100%\", // 48em-80em,\n                                // xl: \"400px\", // 80em+\n                              }}\n                            />\n                          </InputGroup>\n                          <FormErrorMessage>\n                            {form.errors.firstName}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n\n                    <Field name=\"lastName\">\n                      {({ field, form }) => (\n                        <FormControl\n                          isInvalid={\n                            form.errors.lastName && form.touched.lastName\n                          }\n                        >\n                          <InputGroup>\n                            <InputLeftElement\n                              pointerEvents=\"none\"\n                              children={<FaUserCircle />}\n                              marginTop=\"5px\"\n                            />\n                            <Input\n                              {...field}\n                              id=\"lastName\"\n                              placeholder=\"Last Name\"\n                              size=\"lg\"\n                              width={{\n                                base: \"100%\", // 0-48em\n                                md: \"100%\", // 48em-80em,\n                                // xl: \"400px\", // 80em+\n                              }}\n                            />\n                          </InputGroup>\n                          <FormErrorMessage>\n                            {form.errors.lastName}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n                  </Flex>\n\n                  <Flex\n                    flexDirection={{\n                      base: \"column\",\n                      md: \"row\",\n                      lg: \"row\",\n                    }}\n                  >\n                    <Field name=\"username\">\n                      {({ field, form }) => (\n                        <FormControl\n                          isInvalid={\n                            form.errors.username && form.touched.username\n                          }\n                          style={{ marginRight: \"10px\", marginBottom: \"10px\" }}\n                        >\n                          <InputGroup>\n                            <InputLeftElement\n                              pointerEvents=\"none\"\n                              children={<FaUserCircle />}\n                              marginTop=\"5px\"\n                            />\n                            <Input\n                              {...field}\n                              id=\"username\"\n                              placeholder=\"Username\"\n                              size=\"lg\"\n                              width={{\n                                base: \"100%\", // 0-48em\n                                md: \"100%\", // 48em-80em,\n                                //   xl: \"400px\", // 80em+\n                              }}\n                            />\n                          </InputGroup>\n                          <FormErrorMessage>\n                            {form.errors.username}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n\n                    <Field name=\"email\">\n                      {({ field, form }) => (\n                        <FormControl\n                          isInvalid={form.errors.email && form.touched.email}\n                        >\n                          <InputGroup>\n                            <InputLeftElement\n                              pointerEvents=\"none\"\n                              children={<EmailIcon />}\n                              marginTop=\"5px\"\n                            />\n                            <Input\n                              {...field}\n                              id=\"email\"\n                              placeholder=\"Email\"\n                              size=\"lg\"\n                              width={{\n                                base: \"100%\", // 0-48em\n                                md: \"100%\", // 48em-80em,\n                                //   xl: \"400px\", // 80em+\n                              }}\n                            />\n                          </InputGroup>\n                          <FormErrorMessage>\n                            {form.errors.email}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n                  </Flex>\n                  <Flex\n                    flexDirection={{\n                      base: \"column\",\n                      md: \"row\",\n                      lg: \"row\",\n                    }}\n                  >\n                    <Field name=\"password\">\n                      {({ field, form }) => (\n                        <FormControl\n                          isInvalid={\n                            form.errors.password && form.touched.password\n                          }\n                          style={{ marginRight: \"10px\", marginBottom: \"10px\" }}\n                        >\n                          <InputGroup>\n                            <InputLeftElement\n                              pointerEvents=\"none\"\n                              children={<LockIcon />}\n                              marginTop=\"5px\"\n                            />\n                            <Input\n                              type=\"password\"\n                              {...field}\n                              id=\"password\"\n                              placeholder=\" Password\"\n                              size=\"lg\"\n                              width={{\n                                base: \"100%\", // 0-48em\n                                md: \"100%\", // 48em-80em,\n                                //   xl: \"400px\", // 80em+\n                              }}\n                            />\n                          </InputGroup>\n                          <FormErrorMessage>\n                            {form.errors.password}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n                    <Field name=\"confirmPassword\">\n                      {({ field, form }) => (\n                        <FormControl\n                          isInvalid={\n                            form.errors.confirmPassword &&\n                            form.touched.confirmPassword\n                          }\n                        >\n                          <InputGroup>\n                            <InputLeftElement\n                              pointerEvents=\"none\"\n                              children={<LockIcon />}\n                              marginTop=\"5px\"\n                            />\n                            <Input\n                              type=\"password\"\n                              {...field}\n                              id=\"confirmPassword\"\n                              placeholder=\"Confirm Password\"\n                              size=\"lg\"\n                              width={{\n                                base: \"100%\", // 0-48em\n                                md: \"100%\", // 48em-80em,\n                                //   xl: \"400px\", // 80em+\n                              }}\n                            />\n                          </InputGroup>\n                          <FormErrorMessage>\n                            {form.errors.confirmPassword}\n                          </FormErrorMessage>\n                        </FormControl>\n                      )}\n                    </Field>\n                  </Flex>\n                  <Field name=\"address\">\n                    {({ field, form }) => (\n                      <FormControl\n                        isInvalid={form.errors.address && form.touched.address}\n                      >\n                        <InputGroup>\n                          <InputLeftElement\n                            pointerEvents=\"none\"\n                            children={<FaAddressCard color=\"blue.600\" />}\n                            marginTop=\"5px\"\n                          />\n                          <Input\n                            {...field}\n                            id=\"address\"\n                            placeholder=\"Address\"\n                            size=\"lg\"\n                            width={{\n                              base: \"100%\", // 0-48em\n                              md: \"100%\", // 48em-80em,\n                              //   xl: \"400px\", // 80em+\n                            }}\n                          />\n                        </InputGroup>\n                        <FormErrorMessage>\n                          {form.errors.address}\n                        </FormErrorMessage>\n                      </FormControl>\n                    )}\n                  </Field>\n                </Stack>\n\n                <Button\n                  mt={4}\n                  colorScheme=\"blue\"\n                  isLoading={auth.loading}\n                  type=\"submit\"\n                >\n                  Register\n                </Button>\n                <Text marginTop=\"20px\">\n                  Already have an account?{\" \"}\n                  <Link color=\"blue.500\" href=\"/login\">\n                    Login\n                  </Link>\n                </Text>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Flex>\n    </>\n  );\n};\n\nexport default Register;\n","import { Route, Redirect } from \"react-router-dom\";\nimport checkAuth from \"../../helpers/checkAuth\";\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      checkAuth() ? <Component {...props} /> : <Redirect to=\"/login\" />\n    }\n  />\n);\n","import React from \"react\";\nimport \"./404.css\";\nconst MissingPage = () => {\n  return (\n    <div class=\"main\">\n      <div class=\"mainbox\">\n        <div class=\"err\">4</div>\n        <i class=\"far fa-question-circle fa-spin\"></i>\n        <div class=\"err2\">4</div>\n        <div class=\"msg\">\n          Maybe this page moved? Got deleted? Is hiding out in quarantine? Never\n          existed in the first place? or maybe you are not worthy.\n          <p>\n            Anyhow, You can back <a className='font-white' href=\"/\">home</a> and try from there.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MissingPage;\n","export const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const RESTORE_CART = \"RESTORE_CART\";\nexport const UPDATE_CART_COUPON = \"UPDATE_CART_COUPON\";\nexport const COUPON_ERROR = \"COUPON_ERROR\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const CLEAR_ERROR_AND_MESSAGE = \"CLEAR_ERROR_AND_MESSAGE\";","import * as types from \"./cartActionTypes\";\nimport axios from \"axios\";\n\nexport const updateCoupon = (coupon) => {\n  return async function (dispatch) {\n    try {\n      const res = await axios.get(`/api/coupons/code/${coupon}`);\n      dispatch({\n        type: types.UPDATE_CART_COUPON,\n        payload: { percent_off: res.data.percent_off, coupon },\n      });\n    } catch (error) {\n      dispatch({ type: types.COUPON_ERROR, payload: \"Coupon is invalid\" });\n    }\n    setTimeout(() => {\n      dispatch({ type: types.CLEAR_ERROR_AND_MESSAGE });\n    }, 1000);\n  };\n};\n\nexport const addToCart = (foodDetails, qty) => {\n  return function (dispatch) {\n    const payload = { food: foodDetails, qty: Number(qty) };\n    dispatch({\n      type: types.ADD_TO_CART,\n      payload,\n    });\n  };\n};\n\nexport const removeFromCart = (id) => {\n  return function (dispatch) {\n    dispatch({\n      type: types.REMOVE_FROM_CART,\n      payload: id,\n    });\n  };\n};\n\nexport const clearCartAction = () => {\n  return function (dispatch) {\n    dispatch({\n      type: types.CLEAR_CART,\n    });\n  };\n};\n\nexport const restoreFromLocalStorageAction = () => {\n  return function (dispatch) {\n    dispatch({\n      type: types.RESTORE_CART,\n      payload: JSON.parse(localStorage.getItem(\"foodoCart\")),\n    });\n  };\n};\n\nexport const restoreFromPrevOrderAction = (payload) => {\n  return function (dispatch) {\n    localStorage.setItem(\"foodoCart\", JSON.stringify(payload));\n\n    dispatch({\n      type: types.RESTORE_CART,\n      payload,\n    });\n  };\n};\n","import { AddIcon, DeleteIcon } from \"@chakra-ui/icons\";\nimport { Box, Image, Button, useToast } from \"@chakra-ui/react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, removeFromCart } from \"../redux/cart/cartActionCreators\";\n\nexport default function SingleFood({ food }) {\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  const toast = useToast();\n\n  const { image, name, price, _id } = food;\n  const addFoodToCart = () => {\n    const qty = 1;\n    toast({\n      title: \"Item added\",\n      description: `We've added ${name} to the cart`,\n      status: \"success\",\n      position: \"top-right\",\n      duration: 800,\n      isClosable: true,\n    });\n\n    dispatch(addToCart(food, qty));\n  };\n\n  return (\n    <>\n      <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n        {image && <Image src={image} alt={name} />}\n\n        <Box p=\"6\">\n          <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\">\n            {name}\n          </Box>\n\n          <Box\n            d=\"flex\"\n            mt=\"2\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Box>{price} XAF</Box>\n            {cart && cart.foods.length > 0 ? (\n              cart.foods.find((obj) => obj._id === _id) ? (\n                <Button\n                  colorScheme=\"red\"\n                  variant=\"outline\"\n                  leftIcon={<DeleteIcon />}\n                  onClick={() => dispatch(removeFromCart(_id))}\n                >\n                  Remove from cart\n                </Button>\n              ) : (\n                <Button\n                  colorScheme=\"teal\"\n                  variant=\"outline\"\n                  leftIcon={<AddIcon />}\n                  onClick={() => addFoodToCart()}\n                >\n                  Add to cart\n                </Button>\n              )\n            ) : (\n              <Button\n                colorScheme=\"teal\"\n                variant=\"outline\"\n                leftIcon={<AddIcon />}\n                onClick={() => addFoodToCart()}\n              >\n                Add to cart\n              </Button>\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import { SimpleGrid } from \"@chakra-ui/react\";\nimport SingleFood from \"./SingleFood\";\n\nconst FoodGrid = ({ foods }) => {\n  return (\n    <>\n      <SimpleGrid minChildWidth=\"250px\" spacing=\"40px\">\n        {foods\n          ? foods.map((food, idx) => <SingleFood key={idx} food={food} />)\n          : null}\n      </SimpleGrid>\n    </>\n  );\n};\n\nexport default FoodGrid;\n  ","export const FOOD_START = \"FOOD_START\";\nexport const FOOD_SUCCESS = \"FOOD_SUCCESS\";\nexport const FOOD_FAILURE = \"FOOD_FAILURE\";\nexport const FOOD_RESET = \"FOOD_RESET\";\n","import { Spinner } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nconst SpinnerReusable = ({ size }) => {\n  return (\n    <>\n      <Spinner size={size}  color='green.500' />\n    </>\n  );\n};\n\nexport default SpinnerReusable;\n","import React, { useEffect } from \"react\";\nimport FoodGrid from \"./FoodGrid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFoodFromDb } from \"../redux/food/foodActionCreators\";\nimport SpinnerReusable from \"./common/Spinner\";\nimport { Center, Text, Heading } from \"@chakra-ui/react\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    loading: foodStateLoading,\n    foods,\n    error,\n  } = useSelector((state) => state.foods);\n  useEffect(() => {\n    if (!foods) {\n      dispatch(getFoodFromDb());\n    }\n  }, [dispatch, foods]);\n\n  if (foodStateLoading) {\n    return (\n      <Center>\n        <SpinnerReusable size=\"xl\" />\n      </Center>\n    );\n  }\n\n  if (error) {\n    return (\n      <Center>\n        <Text fontWeight=\"bold\">Sorry, an error occurred!</Text>\n      </Center>\n    );\n  }\n  return (\n    <div>\n      <Heading  as='h3' size='lg' mb='20px'>A Tastyful World</Heading>\n      {foods && <FoodGrid foods={foods} />}\n    </div>\n  );\n};\n\nexport default Home;\n","import * as types from \"./foodActionTypes\";\nimport axios from \"axios\";\n\nexport const getFoodFromDb = () => {\n  return async function (dispatch) {\n    dispatch({ type: types.FOOD_START });\n    try {\n      const res = await axios.get(\"api/foods\");\n      dispatch({ type: types.FOOD_SUCCESS, payload: res.data });\n    } catch (error) {\n      const error_msg =\n        error.response && error.response.data.error_msg\n          ? error.response.data.error_msg\n          : error.message;\n      dispatch({ type: types.FOOD_FAILURE, payload: error_msg });\n    }\n  };\n};\n","export const PAY_FOR_ORDER = \"PAY_FOR_ORDER\";\nexport const ORDER_FAILED = \"ORDER_FAILED\";\nexport const ORDER_RESPONSE_CLEAR = \"ORDER_RESPONSE_CLEAR\";\nexport const GET_ORDERS = \"GET_ORDERS\";\nexport const GET_SINGLE_ORDER = \"GET_SINGLE_ORDER\";\nexport const ORDER_START = \"ORDER_START\";\n","const formatDate = (dateString) => {\n  const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n  return new Date(dateString).toLocaleDateString(undefined, options);\n};\n\nexport default formatDate;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getOrdersAction } from \"../redux/order/orderActionCreators\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Text,\n  Link,\n  Center,\n} from \"@chakra-ui/react\";\nimport formatDate from \"../helpers/formatDate\";\nimport SpinnerReusable from \"./common/Spinner\";\n\nconst Profile = () => {\n  const { orders, loading, error } = useSelector((state) => state.order);\n  const { user } = useSelector((state) => state.user);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!orders) {\n      dispatch(getOrdersAction());\n    }\n  }, [dispatch, orders]);\n\n  if (loading) {\n    return (\n      <Center>\n        <SpinnerReusable size=\"xl\" />\n      </Center>\n    );\n  }\n  if (error) {\n    <Center>An error has occurred</Center>;\n  }\n\n  return (\n    <>\n      <Text textAlign=\"right\" fontWeight=\"semibold\" mb=\"20px\">\n        Hello ✌{user && user.lastName}\n      </Text>\n\n      <Text fontWeight=\"semibold\">Orders</Text>\n      <Table size=\"sm\">\n        <Thead>\n          <Tr>\n            <Th>Reference</Th>\n            <Th>Created At</Th>\n            <Th>Total Amount</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {orders ? (\n            orders.map((order, idx) => {\n              return (\n                <Tr key={idx}>\n                  <Td>\n                    <p href={`/order/${order._id}`}>{order.reference}</p>\n                  </Td>\n                  <Td>{formatDate(order.createdAt)}</Td>\n                  <Td>{order.cart.totalAmount} XAF</Td>\n                </Tr>\n              );\n            })\n          ) : (\n            <p>No order yet</p>\n          )}\n        </Tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default Profile;\n","import * as types from \"./orderActionTypes\";\nimport axios from \"../../api/apiUtils\";\nimport { store } from \"../../index\";\n\nexport const createOrderAction = (cart, reference) => {\n  return async function (dispatch) {\n    dispatch({ type: types.ORDER_START });\n\n    try {\n      const res = await axios.post(\"api/orders\", { cart, reference });\n      dispatch({ type: types.PAY_FOR_ORDER, payload: res.data });\n      dispatch({ type: \"CLEAR_CART\" });\n    } catch (error) {\n      const error_msg =\n        error.response && error.response.data.error_msg\n          ? error.response.data.error_msg\n          : error.message;\n      dispatch({ type: types.ORDER_FAILED, payload: error_msg });\n    }\n  };\n};\n\nexport const getOrdersAction = () => {\n  return async function (dispatch) {\n    dispatch({ type: types.ORDER_START });\n    try {\n      const res = await axios.get(\"api/orders\");\n      dispatch({ type: types.GET_ORDERS, payload: res.data });\n    } catch (error) {\n      const error_msg =\n        error.response && error.response.data.error_msg\n          ? error.response.data.error_msg\n          : error.message;\n      dispatch({ type: types.ORDER_FAILED, payload: error_msg });\n    }\n  };\n};\n\nexport const getSingleOrderAction = (id) => {\n  return async function (dispatch) {\n    dispatch({ type: types.ORDER_START });\n\n    try {\n      const { order } = store.getState();\n      if (!order.orders) {\n        const res = await axios.get(`/api/orders/${id}`);\n        dispatch({ type: types.GET_SINGLE_ORDER, payload: res.data });\n      } else {\n        const singleOrder = order.orders.filter((obj) => obj._id === id);\n        dispatch({ type: types.GET_SINGLE_ORDER, payload: singleOrder });\n      }\n    } catch (error) {\n      const error_msg =\n        error.response && error.response.data.error_msg\n          ? error.response.data.error_msg\n          : error.message;\n      dispatch({ type: types.ORDER_FAILED, payload: error_msg });\n    }\n  };\n};\n","import { useEffect } from \"react\";\nimport {\n  useToast,\n  Text,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Tfoot,\n  Button,\n} from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSingleOrderAction } from \"../redux/order/orderActionCreators\";\nimport { restoreFromPrevOrderAction } from \"../redux/cart/cartActionCreators\";\n\nconst SingleOrder = ({ match }) => {\n  const dispatch = useDispatch();\n  const toast = useToast();\n\n  const { errResponse, error, singleOrder } = useSelector(\n    (state) => state.order\n  );\n\n  useEffect(() => {\n    dispatch(getSingleOrderAction(match.params.id));\n  }, [dispatch, match.params.id]);\n\n  useEffect(() => {\n    if (error || errResponse) {\n      toast({\n        title: \"Error!\",\n        description: errResponse || \"Something went wrong\",\n        status: \"error\",\n        position: \"top-right\",\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  }, [error, errResponse, toast]);\n\n  const handleReorder = (e) => {\n    e.preventDefault();\n    dispatch(restoreFromPrevOrderAction(singleOrder.cart));\n    toast({\n      title: \"Success!\",\n      description: \"Check the cart, It has been populated with this order\",\n      status: \"success\",\n      position: \"top-right\",\n      duration: 5000,\n      isClosable: true,\n    });\n  };\n  return (\n    <>\n      <Text as=\"h1\" fontWeight=\"bold\" mb=\"10px\">\n        Order Details\n      </Text>\n      {singleOrder ? (\n        <>\n          <Text>Order ID #{singleOrder._id}</Text>\n          <Table size=\"sm\">\n            <Thead>\n              <Tr>\n                <Th>Name</Th>\n                <Th>Qty</Th>\n                <Th>Amount</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {singleOrder.cart.foods.map((food, idx) => {\n                return (\n                  <Tr key={idx}>\n                    <Td>{food.name}</Td>\n                    <Td>{food.qty}</Td>\n                    <Td>{food.price} XAF</Td>\n                  </Tr>\n                );\n              })}\n            </Tbody>\n            <Tfoot>\n              <Tr>\n                <Th></Th>\n                <Th></Th>\n                <Th>Total Amount: {singleOrder.cart.totalAmount} XAF</Th>\n              </Tr>\n            </Tfoot>\n          </Table>\n          <Button\n            variant=\"outline\"\n            colorScheme=\"blue\"\n            onClick={(e) => handleReorder(e)}\n          >\n            Re Order\n          </Button>\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default SingleOrder;\n","import { Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport { PrivateRoute } from \"./components/containers/PrivateRoute\";\nimport MissingPage from \"./components/error/404\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport SingleOrder from \"./components/SingleOrder\";\n\nconst BaseRouter = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n    <Route exact path=\"/register\" component={Register} />\n    <Route exact path=\"/\" component={Home} />\n    <PrivateRoute exact path=\"/profile/\" component={Profile} />\n    <PrivateRoute exact path=\"/order/:id\" component={SingleOrder} />\n    <Route component={MissingPage} />\n  </Switch>\n);\n\nexport default BaseRouter;\n","import { DeleteIcon } from \"@chakra-ui/icons\";\nimport { Image, Flex, Text, Select, Box, IconButton } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addToCart, removeFromCart } from \"../redux/cart/cartActionCreators\";\n\nconst CartItem = ({ food }) => {\n  const { image, name, qty, price, _id } = food;\n  const selectArr = Array.from({ length: 10 }, (_, i) => i + 1);\n  const dispatch = useDispatch();\n\n  const handleSelectChange = (e) => {\n    dispatch(addToCart(food, e.target.value));\n  };\n  return (\n    <div>\n      <Flex justifyContent=\"space-between\" mb=\"2\">\n        <Image src={image} alt={name} boxSize=\"70px\" style={{objectFit:'contain'}} />\n        <Box as=\"p\" width=\"100px\" fontSize='0.9rem'>\n          {name}\n        </Box>\n        <Text fontWeight=\"semibold\" as=\"p\">\n          {price} XAF\n        </Text>\n        <Select width=\"20%\" value={qty} onChange={(e) => handleSelectChange(e)}>\n          {selectArr.map((num, idx) => (\n            <option value={num} key={idx}>\n              {num}\n            </option>\n          ))}\n        </Select>\n        <Box>\n          <IconButton\n            variant=\"outline\"\n            colorScheme=\"red\"\n            aria-label=\"Delete item from cart\"\n            icon={<DeleteIcon />}\n            onClick={() => dispatch(removeFromCart(_id))}\n          />\n        </Box>\n      </Flex>\n    </div>\n  );\n};\n\nexport default CartItem;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  Link,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nconst OrderSuccess = ({ reference, orderId }) => {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => {\n    dispatch({ type: \"ORDER_RESPONSE_CLEAR\" });\n    setShow(false);\n  };\n  return (\n    <>\n      {show ? (\n        <Modal isOpen={show} onClose={handleClose}>\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>Order success</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n              Yay! Your order with id {orderId} and payment reference{\" \"}\n              {reference} is successful.\n            </ModalBody>\n\n            <ModalFooter>\n              <Button colorScheme=\"blue\" mr={3} onClick={handleClose}>\n                Close\n              </Button>\n              <Button variant=\"ghost\"><Link href='/profile'>Check Orders</Link></Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal>\n      ) : null}\n    </>\n  );\n};\n\nexport default OrderSuccess;\n","import { Box, Button, Input, Text } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateCoupon } from \"../redux/cart/cartActionCreators\";\n\nconst CouponInput = () => {\n  const [coupon, setCoupon] = useState();\n  const [error, setError] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleCouponApply = () => {\n    if (!coupon) {\n      setError(true);\n    } else {\n      dispatch(updateCoupon(coupon));\n    }\n  };\n  return (\n    <Box align=\"right\" textAlign=\"right\">\n      <Text>Got a coupon ? Use it below:</Text>\n      <Input\n        value={coupon}\n        name=\"coupon\"\n        onChange={(e) => {\n          setCoupon(e.target.value);\n          setError(null);\n        }}\n        placeholder=\"Enter Coupon code\"\n        size=\"sm\"\n        width=\"auto\"\n        mr=\"1\"\n        isInvalid={error}\n        errorBorderColor=\"red.300\"\n      />\n      <Button\n        onClick={() => handleCouponApply()}\n        colorScheme=\"blue\"\n        size=\"sm\"\n        variant=\"outline\"\n      >\n        Apply\n      </Button>\n    </Box>\n  );\n};\n\nexport default CouponInput;\n","import {\n  Button,\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  DrawerHeader,\n  DrawerBody,\n  Box,\n  Link,\n  useToast,\n  \n} from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CartItem from \"./CartItem\";\nimport { usePaystackPayment } from \"react-paystack\";\nimport React, { useEffect } from \"react\";\nimport { getUserAction } from \"../redux/user/userActionCreators\";\nimport { createOrderAction } from \"../redux/order/orderActionCreators\";\nimport OrderSuccess from \"./OrderSuccess\";\nimport checkAuth from \"../helpers/checkAuth\";\nimport CouponInput from \"./CouponInput\";\n\nconst CheckoutButton = ({ initializePayment, disabled, onSuccess }) => {\n  return (\n    <Button\n      type=\"submit\"\n      form=\"my-form\"\n      color=\"white  \"\n      colorScheme=\"blue\"\n      disabled={disabled}\n      onClick={() => {\n        initializePayment(onSuccess);\n      }}\n    >\n      Checkout\n    </Button>\n  );\n};\n\nconst CartDrawer = ({ isOpen, onClose }) => {\n  const dispatch = useDispatch();\n  const toast = useToast();\n\n  const cart = useSelector((state) => state.cart);\n  const user = useSelector((state) => state.user) || {};\n  const { orderResponse } = useSelector((state) => state.order);\n  const { message, error } = useSelector((state) => state.cart);\n  const userEmail = user.user ? user.user.email : null;\n\n  useEffect(() => {\n    if (!user.user && checkAuth()) {\n      dispatch(getUserAction());\n    }\n  }, [dispatch, user.user]);\n\n  useEffect(() => {\n    if (message) {\n      toast({\n        title: \"Success\",\n        description: message,\n        status: \"success\",\n        position: \"top-right\",\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n\n    if (error) {\n      toast({\n        title: \"Failed\",\n        description: error,\n        status: \"warning\",\n        position: \"top-right\",\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  }, [toast, message, error]);\n\n  const config = {\n    email: user.user ? userEmail : null,\n    amount: cart ? cart.totalAmount * 100 : 0,\n    publicKey: process.env.REACT_APP_PAYSTACK_PUBLIC_KEY,\n  };\n  const onSuccess = (props) => {\n    dispatch(createOrderAction(cart, props.reference));\n    toast({\n      title: \"Success\",\n      description:\n        \"Order is processing, Kindly wait for a popup that will confirm your order. Do not refresh this page\",\n      status: \"success\",\n      position: \"top-right\",\n      duration: 5000,\n      isClosable: true,\n    });\n  };\n  const initializePayment = usePaystackPayment(config);\n\n  return (\n    <>\n      <Drawer isOpen={isOpen} onClose={onClose} size=\"sm\">\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader>Cart</DrawerHeader>\n\n          <DrawerBody>\n            {cart && cart.foods.length > 0 ? (\n              <>\n                {cart.foods.map((food, idx) => (\n                  <CartItem key={idx} food={food} />\n                ))}\n                <CouponInput />\n                { cart.priceBeforeCoupon &&\n                  <Box textAlign=\"right\" fontWeight=\"bold\">\n                  Original Price: {cart.priceBeforeCoupon} XAF\n                  <br />\n                  Discount: {cart.discount} %\n\n                </Box> \n                }\n\n                <Box textAlign=\"right\" fontWeight=\"bold\">\n                  Total: {cart.totalAmount} XAF\n                </Box>\n                <Box textAlign=\"right\" mt=\"3\">\n                  {userEmail ? (\n                    <CheckoutButton\n                      initializePayment={initializePayment}\n                      disabled={false}\n                      onSuccess={onSuccess}\n                    />\n                  ) : (\n                    <>\n                      <CheckoutButton\n                        initializePayment={initializePayment}\n                        disabled={true}\n                        onSuccess={onSuccess}\n                      />\n                      <Box mt=\"10px\">\n                        <Button colorScheme=\"teal\" mr=\"4\">\n                          <Link href=\"/register\">Sign Up</Link>\n                        </Button>\n                        <Button colorScheme=\"teal\">\n                          <Link href=\"/login\">Log in</Link>\n                        </Button>\n                      </Box>\n                    </>\n                  )}\n                </Box>\n              </>\n            ) : (\n              <Box as=\"h3\" fontWeight=\"bold\" fontSize=\"xl\">\n                Nothing in cart\n              </Box>\n            )}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n      {orderResponse ? (\n        <OrderSuccess\n          reference={orderResponse.reference}\n          orderId={orderResponse._id}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default CartDrawer;\n","export default __webpack_public_path__ + \"static/media/logo.a0fda91f.svg\";","import { ExternalLinkIcon } from \"@chakra-ui/icons\";\nimport { Box, Icon, Center, Link } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { AiFillGithub } from \"react-icons/ai\";\n\nconst Footer = () => {\n  return (\n    <Center>\n      <Box bg=\"teal.700\" w=\"100%\" p={4} color=\"white\" textAlign=\"center\">\n        Built with ❤ by{\" \"}\n        <Link\n          href=\"https://fredolywagni.com\"\n          isExternal\n          fontWeight=\"bold\"\n          color=\"#ababff\"\n          mr=\"10px\"\n        >\n          Fredoly Wagni <ExternalLinkIcon mx=\"2px\" />\n        </Link>\n      </Box>\n    </Center>\n  );\n};\n\nexport default Footer;\n","import './App.css';\nimport {\n  Flex,\n  Button,\n  Spacer,\n  Box,\n  Heading,\n  Container,\n  useDisclosure,\n  Avatar,\n  AvatarBadge,\n  Icon,\n  Link,\n  IconButton,\n  Image,\n  Stack,\n} from '@chakra-ui/react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './routes';\nimport CartDrawer from './components/CartDrawer';\nimport { AiOutlineShoppingCart } from 'react-icons/ai';\nimport { useSelector, useDispatch } from 'react-redux';\nimport checkAuth from './helpers/checkAuth';\nimport { CgProfile } from 'react-icons/cg';\nimport { IoLogOutOutline } from 'react-icons/io5';\nimport { useEffect } from 'react';\nimport { restoreFromLocalStorageAction } from './redux/cart/cartActionCreators';\nimport { authLogout } from './redux/auth/authActionCreators';\nimport LogoSvg from \"./assets/svgs/logo.svg\";\nimport Footer from './components/Footer';\n\nconst CartIcon = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const cart = useSelector((state) => state.cart);\n  return (\n    <>\n      <Avatar\n        onClick={() => onOpen()}\n        icon={<Icon as={AiOutlineShoppingCart} />}\n        bg=\"white\"\n        m=\"3\"  \n        style={{ cursor: 'pointer', zIndex: 1 }}\n      >\n        <AvatarBadge\n          boxSize=\"1.5rem\"\n          bg=\"green.500\"\n          fontSize=\"0.8rem\"\n          color=\"white\"\n        >\n          {cart.count > 0 ? cart.count : 0}\n        </AvatarBadge>\n      </Avatar>\n      <CartDrawer isOpen={isOpen} onClose={onClose} />\n    </>\n  );\n};\n\nfunction App() {\n  const { user } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (localStorage.getItem('foodoCart')) {\n      const { count } = JSON.parse(localStorage.getItem('foodoCart'));\n      if (count > 0) {\n        dispatch(restoreFromLocalStorageAction());\n      }\n    }\n  }, [dispatch]);\n\n  return (\n    <Router>\n      <Flex>\n        <Box p=\"4\">\n          <Heading size=\"md\">\n            <Link href=\"/\">\n              <Image\n                boxSize='90px'\n                borderRadius='full'\n                objectFit='cover'\n                src={LogoSvg}\n                alt='Tasty Logo'\n              />\n            </Link>\n          </Heading>\n        </Box>\n        <Spacer />\n        <Box\n          p=\"4\"\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            cursor: 'pointer',\n          }}\n        >\n          {checkAuth() || user ? (\n            <>\n              <Link href=\"/profile\">\n                <Icon as={CgProfile} w={6} h={6} />\n              </Link>\n              <CartIcon />\n              <IconButton\n                aria-label=\"Log out\"\n                icon={<IoLogOutOutline w={6} h={6} />}\n                onClick={() => dispatch(authLogout())}\n              />\n            </>\n          ) : (\n            <>\n              <Button colorScheme=\"teal\" mr=\"4\">\n                <Link href=\"/register\">Sign Up</Link>\n              </Button>\n              <Button colorScheme=\"teal\">\n                <Link href=\"/login\">Log in</Link>\n              </Button>\n              <CartIcon />\n            </>\n          )}\n        </Box>\n      </Flex>\n      <Container maxW=\"container.xl\" minHeight=\"80vh\">\n        <BaseRouter />\n      </Container>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"./authActionTypes\";\n\nconst initialSignupState = {\n  loading: false,\n  token: null,\n  error: false,\n  errResponse: \"\",\n};\n\nexport function authReducer(state = initialSignupState, action) {\n  switch (action.type) {\n    case types.AUTH_START:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errResponse: \"\",\n      };\n\n    case types.AUTH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        token: action.payload,\n      };\n\n    case types.AUTH_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        errResponse: action.payload,\n      };\n    case types.AUTH_RESET:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        errResponse: \"\",\n      };\n    case types.AUTH_LOGOUT:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        errResponse: \"\",\n        token: null,\n      };\n\n    default:\n      return state;\n  }\n}\n","import * as types from \"./foodActionTypes\";\n\nconst initialFoodState = {\n  loading: false,\n  foods: \"\",\n  error: false,\n  errResponse: \"\",\n};\n\nexport default function foodReducer(state = initialFoodState, action) {\n  switch (action.type) {\n    case types.FOOD_START:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errResponse: \"\",\n      };\n\n    case types.FOOD_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        foods: action.payload,\n      };\n\n    case types.FOOD_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        errResponse: action.payload,\n      };\n    case types.FOOD_RESET:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        errResponse: \"\",\n      };\n\n    default:\n      return state;\n  }\n}\n","import * as types from './cartActionTypes';\n\nconst initialCartState = {\n  foods: [],\n  count: 0,\n  totalAmount: 0,\n  discount: null,\n  error: null,\n  message: null,\n  coupon: null,\n  priceBeforeCoupon: null,\n};\n\nexport default function cartReducer(state = initialCartState, action) {\n  switch (action.type) {\n    case types.ADD_TO_CART:\n      return {\n        ...state,\n        ...addToExistingObjInCart(state, action.payload),\n      };\n    case types.REMOVE_FROM_CART:\n      return {\n        ...state,\n        ...removeItemFromCart(state, action.payload),\n      };\n    case types.RESTORE_CART:\n      return {\n        ...action.payload,\n      };\n\n    case types.UPDATE_CART_COUPON:\n      const { coupon, percent_off } = action.payload;\n      return {\n        ...state,\n        ...updateCoupon(state, percent_off, coupon),\n      };\n\n    case types.CLEAR_CART:\n      localStorage.removeItem('foodoCart');\n      return initialCartState;\n\n    case types.COUPON_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case types.CLEAR_ERROR_AND_MESSAGE:\n      return {\n        ...state,\n        error: null,\n        message: null,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction addToExistingObjInCart(cart, payload) {\n  const newCartState = { ...cart };\n  const { food, qty } = payload;\n  let existingFood = newCartState.foods.find((obj) => obj._id === food._id);\n  if (existingFood) {\n    existingFood.qty = qty;\n    newCartState.priceBeforeCoupon = calculateTotal(newCartState.foods);\n    newCartState.totalAmount = calculateTotal(\n      newCartState.foods,\n      newCartState.discount\n    );\n    newCartState.count = countItemsInCart(newCartState.foods);\n    localStorage.setItem('foodoCart', JSON.stringify(newCartState));\n    return newCartState;\n  } else {\n    food.qty = qty;\n    let updatedCart = { ...cart };\n    updatedCart.foods = [...updatedCart.foods, food];\n    updatedCart.priceBeforeCoupon = calculateTotal(updatedCart.foods);\n    updatedCart.totalAmount = calculateTotal(updatedCart.foods, cart.discount);\n    updatedCart.count = countItemsInCart(updatedCart.foods);\n\n    localStorage.setItem('foodoCart', JSON.stringify(updatedCart));\n    return updatedCart;\n  }\n}\n\nfunction removeItemFromCart(cart, payload) {\n  const newCartState = { ...cart };\n  newCartState.foods = newCartState.foods.filter((obj) => obj._id !== payload);\n  newCartState.priceBeforeCoupon = calculateTotal(newCartState.foods);\n  newCartState.totalAmount = calculateTotal(\n    newCartState.foods,\n    newCartState.discount\n  );\n  newCartState.count = countItemsInCart(newCartState.foods);\n  localStorage.setItem('foodoCart', JSON.stringify(newCartState));\n\n  return newCartState;\n}\n\nfunction updateCoupon(cart, percent_off, coupon) {\n  const newCartState = { ...cart };\n  newCartState.discount = percent_off;\n  newCartState.priceBeforeCoupon = calculateTotal(newCartState.foods);\n  newCartState.totalAmount = calculateTotal(newCartState.foods, percent_off);\n  newCartState.count = countItemsInCart(newCartState.foods);\n  newCartState.message = `Coupon has been applied! You got ${percent_off}% off`;\n  newCartState.coupon = coupon;\n  // local storage cart was declared so the toast will not keep poping off\n  // const local_storage_cart = { ...newCartState, message: null, discount: null, coupon:null };\n  // localStorage.setItem(\"foodoCart\", JSON.stringify(local_storage_cart));\n  return newCartState;\n}\n\nfunction calculateTotal(cart, discount) {\n  let total = 0;\n  total = cart.reduce((sum, i) => {\n    return sum + i.price * i.qty;\n  }, 0);\n  if (discount) {\n    total = total - (discount / 100) * total;\n  }\n  return +total.toFixed(2);\n}\n\nfunction countItemsInCart(cart) {\n  return cart.reduce((sum, i) => {\n    return sum + i.qty;\n  }, 0);\n}\n","import * as types from \"./userActionTypes\";\n\nconst initialUserState = {\n  loading: true,\n  error: false,\n  errResponse: \"\",\n  user: null,\n};\n\nexport default function userReducer(state = initialUserState, action) {\n  switch (action.type) {\n    case types.USER_START:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errResponse: \"\",\n      };\n    case types.GET_USER:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        errResponse: \"\",\n        user: action.payload,\n      };\n    case types.USER_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        errResponse: action.payload,\n      };\n    case \"AUTH_LOGOUT\":\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        errResponse: \"\",\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import * as types from \"./orderActionTypes\";\n\nconst initialOrderState = {\n  loading: false,\n  orderResponse: null,\n  error: false,\n  errResponse: \"\",\n  orders: null,\n  singleOrder: null,\n};\n\nexport default function orderReducer(state = initialOrderState, action) {\n  switch (action.type) {\n    case types.ORDER_START:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errResponse: \"\",\n      };\n    case types.PAY_FOR_ORDER:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errResponse: \"\",\n        orderResponse: action.payload,\n        // orders: [...state.orders, action.payload],\n      };\n    case types.GET_ORDERS:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        errResponse: \"\",\n        orders: action.payload,\n      };\n    case types.GET_SINGLE_ORDER:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        errResponse: \"\",\n        singleOrder: action.payload,\n      };\n    case types.ORDER_FAILED:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        orderResponse: null,\n        errResponse: action.payload,\n      };\n    case types.ORDER_RESPONSE_CLEAR:\n      return {\n        ...state,\n        orderResponse: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./auth/authReducers\";\nimport foodReducer from \"./food/foodReducers\";\nimport cartReducer from \"./cart/cartReducers\";\nimport userReducer from \"./user/userReducers\";\nimport orderReducer from \"./order/orderReducers\";\n\nconst monsterReducer = combineReducers({\n  auth: authReducer,\n  foods: foodReducer,\n  cart: cartReducer,\n  user: userReducer,\n  order: orderReducer,\n});\n\nexport default monsterReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport thunk from \"redux-thunk\";\nimport monsterReducer from \"./redux/monsterReducer\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\"; // providing your React App with redux\n\nconst middleWare = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n  monsterReducer,\n  {},\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}